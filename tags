Contours	fgivenx/contours.py	/^class Contours(object):$/
FunctionSample	fgivenx/data_storage.py	/^class FunctionSample(Sample):$/
FunctionalPosterior	fgivenx/data_storage.py	/^class FunctionalPosterior(Posterior):$/
PMF	fgivenx/utils.py	/^class PMF(object):$/
Posterior	fgivenx/data_storage.py	/^class Posterior(object):$/
ProgressBar	fgivenx/progress.py	/^class ProgressBar(object):$/
Sample	fgivenx/data_storage.py	/^class Sample(object):$/
__call__	fgivenx/data_storage.py	/^    def __call__(self,x):$/
__call__	fgivenx/progress.py	/^    def __call__(self):$/
__call__	fgivenx/utils.py	/^    def __call__(self,t):$/
__getitem__	fgivenx/data_storage.py	/^    def __getitem__(self,paramname):$/
__init__	fgivenx/contours.py	/^    def __init__(self, fsamples, x_range, nx, prog/
__init__	fgivenx/data_storage.py	/^    def __init__(self, params, paramnames, logL, w/
__init__	fgivenx/data_storage.py	/^    def __init__(self,chains_file,paramnames_file)/
__init__	fgivenx/planckStyle.py	/^    def __init__(self):$/
__init__	fgivenx/progress.py	/^    def __init__(self,n,message=" "):$/
__init__	fgivenx/utils.py	/^    def __init__(self,samples):$/
__init__	fgivenx/weighted_kde.py	/^    def __init__(self, dataset, bw_method=None, we/
__iter__	fgivenx/data_storage.py	/^    def __iter__(self):$/
__len__	fgivenx/data_storage.py	/^    def __len__(self):$/
__repr__	fgivenx/data_storage.py	/^    def __repr__(self):$/
__str__	fgivenx/data_storage.py	/^    def __str__(self):$/
_compute_covariance	fgivenx/weighted_kde.py	/^    def _compute_covariance(self):$/
belowTitleLine	fgivenx/planckStyle.py	/^    def belowTitleLine(self, colsPerParam, numResu/
compute_masses	fgivenx/contours.py	/^def compute_masses(slices,pbar=False):$/
compute_slices	fgivenx/contours.py	/^def compute_slices(fsamples,xs,pbar=False):$/
compute_zs	fgivenx/contours.py	/^def compute_zs(xs,masses,pbar=False):$/
doExport	fgivenx/planckStyle.py	/^    def doExport(self, fname=None, adir=None, wate/
endTable	fgivenx/planckStyle.py	/^    def endTable(self):$/
evaluate	fgivenx/weighted_kde.py	/^    def evaluate(self, points):$/
export	fgivenx/planckStyle.py	/^    def export(self, fname=None, tag=None):$/
exportExtra	fgivenx/planckStyle.py	/^    def exportExtra(self, fname=None):$/
f	fgivenx/utils.py	/^    def f(x):$/
find_all_roots	fgivenx/utils.py	/^def find_all_roots(xs,ys,y,function):$/
formatTitle	fgivenx/planckStyle.py	/^    def formatTitle(self, title):$/
gaussian_kde	fgivenx/weighted_kde.py	/^class gaussian_kde(object):$/
getBatch	fgivenx/planckStyle.py	/^    def getBatch(self):$/
getJobItem	fgivenx/planckStyle.py	/^    def getJobItem(self, paramtag, datatag):$/
getPlotter	fgivenx/planckStyle.py	/^def getPlotter(plot_data=None, chain_dir=None, **k/
getPlotterWidth	fgivenx/planckStyle.py	/^def getPlotterWidth(size=1, **kwargs):  # size in /
getRoot	fgivenx/planckStyle.py	/^    def getRoot(self, paramtag, datatag, returnJob/
getSinglePlotter	fgivenx/planckStyle.py	/^def getSinglePlotter(ratio=3 \/ 4., plot_data=None,/
getSubplotPlotter	fgivenx/planckStyle.py	/^def getSubplotPlotter(plot_data=None, chain_dir=No/
get_samples	fgivenx/read_data.py	/^def get_samples(filename, function, chosen_paramet/
load_contours	fgivenx/contours.py	/^def load_contours(datafile):$/
pairwise	fgivenx/utils.py	/^def pairwise(iterable):$/
planckPlotter	fgivenx/planckStyle.py	/^class planckPlotter(plots.GetDistPlotter):$/
planckStyleTableFormatter	fgivenx/planckStyle.py	/^class planckStyleTableFormatter(types.NoLineTableF/
planck_lensing	fgivenx/planckStyle.py	/^def planck_lensing(omm, sigma):$/
plot	fgivenx/contours.py	/^    def plot(self,ax,colors=matplotlib.pyplot.cm.R/
plotBounds	fgivenx/planckStyle.py	/^def plotBounds(omm, data, c='gray'):$/
plot_contours	fgivenx/plot_contours.py	/^def plot_contours(ax,root,colors=matplotlib.pyplot/
read_contours	fgivenx/read_data.py	/^def read_contours(root):$/
save	fgivenx/contours.py	/^    def save(self,datafile):$/
save_contours	fgivenx/read_data.py	/^def save_contours(root,x,y,z):$/
scotts_factor	fgivenx/weighted_kde.py	/^    def scotts_factor(self):$/
setRc	fgivenx/planckStyle.py	/^def setRc():$/
set_bandwidth	fgivenx/weighted_kde.py	/^    def set_bandwidth(self, bw_method=None):$/
set_function	fgivenx/data_storage.py	/^    def set_function(self,function,chosen_paramete/
set_function	fgivenx/data_storage.py	/^    def set_function(self,function,chosen_paramete/
silverman_factor	fgivenx/weighted_kde.py	/^    def silverman_factor(self):$/
startTable	fgivenx/planckStyle.py	/^    def startTable(self, ncol, colsPerResult, numR/
textAsColumn	fgivenx/planckStyle.py	/^    def textAsColumn(self, txt, latex=False, separ/
titleSubColumn	fgivenx/planckStyle.py	/^    def titleSubColumn(self, colsPerResult, title)/
trim_samples	fgivenx/data_storage.py	/^    def trim_samples(self,nsamp=None):$/
